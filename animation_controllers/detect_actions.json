{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.jump": {
			"states": {
				"default": {
					"transitions": [{
						"jump": "query.is_jumping"
					}],
					"on_entry": [
						"/tag @s remove jump",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6JUMP§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"jump": {
					"transitions": [{
						"default": "!query.is_jumping"
					}],
					"on_entry": [
						"/tag @s add jump",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6JUMP§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		},
		"controller.animation.glide": {
			"states": {
				"default": {
					"transitions": [{
						"glide": "query.is_gliding"
					}],
					"on_entry": [
						"/tag @s remove gliding",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6GLIDE§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"glide": {
					"transitions": [{
						"default": "!query.is_gliding"
					}],
					"on_entry": [
						"/tag @s add gliding",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6GLIDE§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		},
		"controller.animation.levitate": {
			"states": {
				"default": {
					"transitions": [{
						"levitate": "query.is_levitating"
					}],
					"on_entry": [
						"/tag @s remove levitating",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6LEVITATE§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"levitate": {
					"transitions": [{
						"default": "!query.is_levitating"
					}],
					"on_entry": [
						"/tag @s add levitating",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6LEVITATE§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		},
		"controller.animation.ground": {
			"states": {
				"default": {
					"transitions": [{
						"ground": "query.is_on_ground"
					}],
					"on_entry": [
						"/tag @s remove ground",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6GROUND§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"ground": {
					"transitions": [{
						"default": "!query.is_on_ground"
					}],
					"on_entry": [
						"/tag @s add ground",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6GROUND§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		},
		"controller.animation.death": {
			"states": {
				"default": {
					"transitions": [{
						"dead": "!query.is_alive"
					}],
					"on_entry": [
						"/tag @s remove dead",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6DEATH§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"dead": {
					"transitions": [{
						"default": "query.is_alive"
					}],
					"on_entry": [
						"/tag @s remove speedtest",
						"/tag @s remove speedtest2",
						"/scoreboard players set @s timer 0",
						"/tag @p remove attack",
						"/tag @p remove left",
						"/tag @s add dead",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6DEATH§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		},
		"controller.animation.ride": {
			"states": {
				"default": {
					"transitions": [{
						"ride": "query.is_riding"
					}],
					"on_entry": [
						"/tag @s remove riding",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6RIDE§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"ride": {
					"transitions": [{
						"default": "!query.is_riding"
					}],
					"on_entry": [
						"/tag @s add riding",
						"/tag @s remove speedtest2",
						"/scoreboard players set @s timer 0",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6RIDE§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		},
		"controller.animation.left": {
			"states": {
				"default": {
					"transitions": [{
						"left": "variable.attack_time"
					}],
					"on_entry": [
						"/tag @s remove left",
						"/scoreboard players set @s last_attack 0",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6LEFT§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"left": {
					"transitions": [{
						"default": "!variable.attack_time"
					}],
					"on_entry": [
						"/tag @s add left",
						"/scoreboard players set @s last_attack 0",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6LEFT§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}",
						"/scoreboard players add @s[tag=dead] killauravl 1",
						"/execute @s[tag=dead] ~~~ tellraw @a[tag=notify] {\"rawtext\":[{\"text\":\"§r§4[§6Paradox§4]§r \"},{\"selector\":\"@s\"},{\"text\":\" §1has failed §7(Combat) §4Killaura/B. VL= \"},{\"score\":{\"name\":\"@s\",\"objective\":\"killauravl\"}}]}"

					]
				}
			}
		},
		"controller.animation.right": {
			"states": {
				"default": {
					"transitions": [{
						"right": "query.is_using_item"
					}],
					"on_entry": [
						"/tag @s remove right",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6RIGHT§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop,ticks=\"},{\"score\":{\"name\":\"@s\",\"objective\":\"right\"}},{\"text\":\")\"}]}",
						"/scoreboard players set @s right 0"
					]
				},
				"right": {
					"transitions": [{
						"default": "!query.is_using_item"
					}],
					"on_entry": [
						"/tag @s add right",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6RIGHT§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start,ticks=0)\"}]}",
						"/scoreboard players add @s[tag=hasGUIopen] invmovevl 1",
						"/execute @s[tag=hasGUIopen] ~~~ tellraw @a[tag=notify] {\"rawtext\":[{\"text\":\"§r§4[§6Paradox§4]§r \"},{\"selector\":\"@s\"},{\"text\":\" §1has failed §7(Movement) §4InventoryMods/C §7(is_using)§4. VL= \"},{\"score\":{\"name\":\"@s\",\"objective\":\"invmovevl\"}}]}"
					]
				}
			}
		},
		"controller.animation.sneak": {
			"states": {
				"default": {
					"transitions": [{
						"sneak": "query.is_sneaking"
					}],
					"on_entry": [
						"/tag @s remove sneak",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6SNEAK§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"sneak": {
					"transitions": [{
						"default": "!query.is_sneaking"
					}],
					"on_entry": [
						"/tag @s add sneak",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6SNEAK§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		},
		"controller.animation.move": {
			"states": {
				"default": {
					"transitions": [{
						"move": "query.is_moving"
					}],
					"on_entry": [
						"/tag @s remove moving",
						"/tellraw @a[tag=packetlogger,tag=packetlogger2] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6MOVE§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"move": {
					"transitions": [{
						"default": "!query.is_moving"
					}],
					"on_entry": [
						"/tag @s add moving",
						"/tellraw @a[tag=packetlogger,tag=packetlogger2] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6MOVE§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		},
		"controller.animation.enchanth": {
			"states": {
				"default": {
					"transitions": [
						{
							"unenchanth": "!variable.helmet_ench && !variable.helmet_enchleather"
						},
						{
							"enchanth": "variable.helmet_ench || variable.helmet_enchleather"
						}
					]
				},
				"unenchanth": {
					"transitions": [
						{
							"default": "(1.0)"
						}
					],
					"on_entry": [
						"/scoreboard players set @s ench_helmet 0"
					]
				},
				"enchanth": {
					"transitions": [
						{
							"default": "(1.0)"
						}
					],
					"on_entry": [
						"/scoreboard players set @s ench_helmet 1"
					]
				}
			}
		},
		"controller.animation.enchantc": {
			"states": {
				"default": {
					"transitions": [
						{
							"unenchantc": "!variable.chest_ench && !variable.chest_enchleather"
						},
						{
							"enchantc": "variable.chest_ench || variable.chest_enchleather"
						}
					]
				},
				"unenchantc": {
					"transitions": [
						{
							"default": "(1.0)"
						}
					],
					"on_entry": [
						"/scoreboard players set @s ench_chest 0"
					]
				},
				"enchantc": {
					"transitions": [
						{
							"default": "(1.0)"
						}
					],
					"on_entry": [
						"/scoreboard players set @s ench_chest 1"
					]
				}
			}
		},
		"controller.animation.enchantl": {
			"states": {
				"default": {
					"transitions": [
						{
							"unenchantl": "!variable.legs_ench && !variable.legs_enchleather"
						},
						{
							"enchantl": "variable.legs_ench || variable.legs_enchleather"
						}
					]
				},
				"unenchantl": {
					"transitions": [
						{
							"default": "(1.0)"
						}
					],
					"on_entry": [
						"/scoreboard players set @s ench_legs 0"
					]
				},
				"enchantl": {
					"transitions": [
						{
							"default": "(1.0)"
						}
					],
					"on_entry": [
						"/scoreboard players set @s ench_legs 1"
					]
				}
			}
		},
		"controller.animation.enchantb": {
			"states": {
				"default": {
					"transitions": [
						{
							"unenchantb": "!variable.boots_ench && !variable.boots_enchleather"
						},
						{
							"enchantb": "variable.boots_ench || variable.boots_enchleather"
						}
					]
				},
				"unenchantb": {
					"transitions": [
						{
							"default": "(1.0)"
						}
					],
					"on_entry": [
						"/scoreboard players set @s ench_boots 0"
					]
				},
				"enchantb": {
					"transitions": [
						{
							"default": "(1.0)"
						}
					],
					"on_entry": [
						"/scoreboard players set @s ench_boots 1"
					]
				}
			}
		},
		"controller.animation.swim": {
			"states": {
				"default": {
					"transitions": [{
						"swim": "query.is_swimming"
					}],
					"on_entry": [
						"/tag @s remove swimming",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6SWIM§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=stop)\"}]}"
					]
				},
				"swim": {
					"transitions": [{
						"default": "!query.is_swimming"
					}],
					"on_entry": [
						"/tag @s add swimming",
						"/tellraw @a[tag=packetlogger] {\"rawtext\":[{\"text\":\"§߈§r§4[§6Paradox§4]§r §bRecieved §6SWIM§r packet from: §g\"},{\"selector\":\"@s\"},{\"text\":\" §7(type=start)\"}]}"
					]
				}
			}
		}
	}
}
